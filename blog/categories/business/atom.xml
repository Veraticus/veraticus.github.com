<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: business | Hi, I'm Josh Symonds]]></title>
  <link href="http://joshsymonds.com/blog/categories/business/atom.xml" rel="self"/>
  <link href="http://joshsymonds.com/"/>
  <updated>2013-04-23T14:17:01-05:00</updated>
  <id>http://joshsymonds.com/</id>
  <author>
    <name><![CDATA[Josh Symonds]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[The Perils of Overengineering]]></title>
    <link href="http://joshsymonds.com/blog/2013/04/23/the-perils-of-overengineering/"/>
    <updated>2013-04-23T13:19:00-05:00</updated>
    <id>http://joshsymonds.com/blog/2013/04/23/the-perils-of-overengineering</id>
    <content type="html"><![CDATA[<p>Overengineering is a special subset of the generalized problem of "making bad choices." Usually overengineering is the result of one of two specific bad choices: either adding too much unnecessary bloat to something relatively simple, or creating a customized solution when many out-of-the-box alternatives already exist. After running into these problems over and over again, I'm going to quantify and identify them so that you and your friends can avoid the perils of overengineering.</p>

<!-- more -->


<h2>Don't Overthink It</h2>

<p>Does your app really need Meteor? I'm not arguing that Meteor (or Backbone or your complicated stateful library of choice) isn't super awesome or that people shouldn't know it -- some of the most successful applications on the Internet use it and frameworks like it. But does <strong>your current project</strong> need it?</p>

<p>Chances are the answer is "no." You'll double the amount of code in your app, introduce accessibility problems, and hinder page loads. The tradeoffs for a web application that uses boatloads of JavaScript interactions are worth it. But your eeny weeny storefront? Your JS bloat will make it impossible to maintain and difficult to use. Just cut it.</p>

<p>This goes for any technology. Coco Chanel infamously stated, "Before you leave the house, look in the mirror and take one thing off." What she applied to fashion, I apply to code. Before you commit, look in the mirror. Do you really need everything you're included? Did you make the best choices? If you're not sure, do some research. It'll save you a boatload of trouble down the river.</p>

<h2>Respect The Majority</h2>

<p>Your awesome, custom-designed redis/memcached database storage solution is eye-meltingly fantastic. You can fetch all users with a query like this:</p>

<p><code>ruby
  $d.u.f(:a)
</code></p>

<p>It takes half a millisecond -- before caches have been warmed. It's schemaless and uses join tables for every column. You're the happiest programmer on the planet.</p>

<p>And silently, the people that will have to maintain your code after your departure stare at you with smoldering hatred. Because they don't know how it works, and no, tests don't reasonably define expectations or replace documentation. Even documentation won't save them from the bugs hiding in your custom solution -- and believe me, there will be tremendous bugs hiding there. Your client and the new developer will have to spend time fixing those problems, time that could have been spent developing useful new features.</p>

<p>So next time, instead of rolling your own, pick a great solution that already works and that has a lot of open-source support. You'll save everyone involved a lot of time and trouble. No, you won't be inventing the next Rails or Node.js this way. Go invent it on your own time with a project you intend to be with forever, or at least one you'll never have to hand off.</p>

<h2>New IS Cool</h2>

<p>I know why it's tempting to write code the fun way, instead of the proper way. Who wants to use the fuddy-duddy old technologies when some enterprising individual just made the coding mashup you've been waiting for? But remember to keep your audience in mind. If you're coding for a client (and if you have a full-time job, your client is your employer) you need to make code that's first maintainable, second performant, and, as a distant third, ground-breaking and full of awesome tech.</p>

<p>Your time to shine -- your opportunity to cut yourself on the bleeding edge -- is with your own private projects. And if you're lucky and good, and the final product is really neat, thousands of people will adopt it for their use. Then, and only then, you can use it in production projects and feel like an awesome success... and without falling into one of the pitfalls of overengineering.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Why I'm Not Applying to 37Signals (But Why You Should)]]></title>
    <link href="http://joshsymonds.com/blog/2013/03/19/why-im-not-applying-to-37signals-but-why-you-should/"/>
    <updated>2013-03-19T13:16:00-05:00</updated>
    <id>http://joshsymonds.com/blog/2013/03/19/why-im-not-applying-to-37signals-but-why-you-should</id>
    <content type="html"><![CDATA[<p>In case you haven't heard...</p>

<p><img src="http://f.cl.ly/items/2t3d0J0z3045350b1j2d/Screenshot_3_19_13_1_23_PM.png" alt="Rails Programmer: 37Signals" /></p>

<p>Yes, it's true: <a href="http://en.wikipedia.org/wiki/David_Heinemeier_Hansson">Willy Wonka</a> is going to grant one lucky golden ticket holder a tour of the chocolate factory. And then you get to stay there until you somehow get tired of working at one of the coolest companies on planet Earth -- which, to carry my analogy, would probably be as likely to happen as getting bored of eating chocolate. If you're into Rails, you'd have to be stupid to not at least consider such an amazing opportunity.</p>

<p>So I did, and because I'm a programmer I carefully enumerated my thoughts. If you're on the fence at all about taking the plunge, maybe my reasoning will help you. Or horrify you -- either way, you'll have an opinion!</p>

<!-- more -->


<h2>Why You Should Apply</h2>

<ol>
<li><h3>They've literally written books about how great it is to work there.</h3>

<p>If you haven't read <a href="http://www.amazon.com/Rework-Jason-Fried/dp/0307463745">Rework</a> you probably should. 37signals is immune to typical corporate bullshit: you won't find stupid meetings, outside investors, or anyone burning the midnight oil here. You'll find work. Great, meaningful, empowering work. When you get right down to it, isn't that what people actually want out of their jobs? And you know 37signals is 100% dedicated to keeping it that way, since, well, as I said, they literally wrote the book on their business practices. They're committed not only to the customer experience, but the employee experience. And that counts for a lot.</p></li>
<li><h3><a href="http://en.wikipedia.org/wiki/David_Heinemeier_Hansson">The Man Himself</a>.</h3>

<p>For those who think that intellect is at least as sexy as looks, this man would be the January pinup for the Men of 37Signals wall calendar I've been lobbying so hard for them to make. He's the inventor of Rails, he's highly opinionated, and he even drives race cars! Assuming he takes a shine to you, what's not to like? I imagine that, if you announced to a room of programmers, "I work with DHH," there would be a brief hush and then everyone would be talking over each other. One would say, "That man is a crazy person!" And another, "He's the greatest programmer to ever draw breath!" There's not a lot of people in the world you can work with who are smart, polarizing, and have invented the application framework you use in your day-to-day job. (And drive race cars.) You should jump at the opportunity to work with DHH.</p></li>
<li><h3>Fame &amp; fortune await.</h3>

<p>Or, well, at least fame does. I have no idea what 37signals would offer for this job, though I bet they aren't stingy on the paychecks. But being part of 37signals (while once again polarizing) ensures you notoriety in the world of Rails in particular and programmers in general. Most people you'll talk to will know where you work. Your title and position will be meaningful -- and also note that your personal fame will skyrocket. If you wanted to suddenly gain a few thousand Twitter followers (without having to pay $5.00), getting this job would be a great way to do it. Keep in mind too that, when you're a 37signals alum (unless you intend to be a lifer), having "Programmer at 37signals" on your resume will look even more stellar than all those follower numbers.</p></li>
<li><h3>Work with the best -- and be the best.</h3>

<p>37signals' programming team is the crème de la crème of the Rails world. You'll be challenged constantly to be just as great as they are. Imagine an environment where you might be the weakest link -- doesn't that thought thrill you? To work with the smartest, most dedicated people in the business? People who are at the apex of their field? You'll grow and change and learn in ways you probably never expected, all because 37signals is a team of the best. And you can also take secret joy in the thought that, since they accepted you, they must see some of the same greatness in you as well.</p></li>
</ol>


<h2>Why You Shouldn't</h2>

<ol>
<li><h3>You're not the best.</h3>

<p>But in a team of greats, even being great is not enough -- or, to use a more colorful metaphor, in a constellation with stars as bright as 37signals, you have little hope of shining brighter. I hear Google engineers suffer from similar problems, and also University of Chicago undergraduates. Coming from places where you were the best, now you'll be just another programmer. For some, the knowledge that they're there is enough: but there are lots of places with amazing teams, and some where the teams have more room for you to stand out than in 37signals (or Google or the U of C). These places are waiting for you, though they don't yet have the fame and reach of 37signals. It's up to you to find them!</p></li>
<li><h3>While it's a great company, it's still a company.</h3>

<p>I love startups. In a startup I'm not just a programmer: I do lots and lots of work with computers, it's true, and most of that is programming. But I'm also responsible for marketing, design, number crunching, tech support, user experience, and when you get right down to it a little bit of everything else too. In a small group you must be a talented polymath, and what you don't know how to do you learn quickly. 37signals is 36 people big and they were founded in 1999. Personally speaking I like growing outside of my computer-walled comfort zone. How much of that would you get at 37signals? That's not an easy question to answer, but I would bet not a whole lot -- or, at least, less than you would somewhere else.</p></li>
<li><h3>Go do it yourself.</h3>

<p>While 37signals is a great company, there's nothing inherently special about it. They make CRM software, and while that's an interesting problem space, there's tons of fascinating questions to answer out there -- questions that can only be answered through excellent software! The point of Rework is that there's no real magic in 37signals that people who are smart and dedicated can't create themselves. In my heart, I feel like DHH would look down on you for joining a corporation instead of becoming an awesome entrepreneur yourself. Sure, you'd be joining his company, but ultimately, if you're so great, why aren't you out there making a name of your own, rather than riding on someone else's coattails? Even if they're his.</p></li>
<li><h3>Fame &amp; fortune await!</h3>

<p>If you're a gainfully employed Rails programmer, most likely you make a comparable amount to what 37signals could offer you, unless they're dramatically out of line with what the market pays. And while they're famous (and you would become more so, too, if you joined them), if you want to be a programming luminary in your own right, you can't join stars that have already risen. Do you really want fame and fortune? Then you don't want to join 37signals. They've already arrived there, and while there's money to be made and people to impress, if you want to to make it big you need to take a risk and not join an established, successful company... regardless of how awesome they are.</p></li>
</ol>


<h2>In The End</h2>

<p>At the point I'm at in my career, 37signals -- while incredibly appealing -- isn't the right choice for me. I hope to conquer the world myself, rather than join victorious conquerers. But where I was at five years ago? I would have moved heaven and earth to swing an interview there. If you haven't picked this up already, they're my programming heroes: and they should be yours too, because they care about everything that's important in this industry. So if you're at all interested in being a programmer among programmers, then 37signals is calling you.</p>

<p>If not, I look forward to seeing what you create in the future, because I bet it'll be stellar.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Breaking Up With GirlsGuideTo]]></title>
    <link href="http://joshsymonds.com/blog/2012/12/27/breaking-up-with-girlsguideto/"/>
    <updated>2012-12-27T19:40:00-06:00</updated>
    <id>http://joshsymonds.com/blog/2012/12/27/breaking-up-with-girlsguideto</id>
    <content type="html"><![CDATA[<p>It's never easy to decide to move on, particularly when you're a cofounder. It definitely feels less like a business shakeup and more like a real breakup.</p>

<p>But I must announce that my time at GirlsGuideTo has officially ended.</p>

<p>I'm proud of the work I've done for GirlsGuideTo. I took a <a href="http://old.girlsguideto.com/home">decrepit, slow PHP Drupal installation</a> and turned it into a <a href="http://girlsguideto.com/">speedy, modernized Rails application</a>. The new GirlsGuideTo uses some incredibly modern technologies to be fast, while still being maintainable and consistent. The pages load near-instantly thanks to <a href="http://joshsymonds.com/blog/2012/12/18/making-your-web-pages-ridiculously-fast-without-breaking-them/">head.js and Turbolinks</a>, and the Rails code is well-separated and highly tested thanks to some awesome concerns and really nifty Rack middleware.</p>

<p>It also features a really kickass design from my friend <a href="https://twitter.com/LukesBeard">@LukesBeard</a>, so it also looks great in addition to feeling great.</p>

<p>Though I'm moving to greener pastures, I'm sure GirlsGuideTo has a bright future ahead of them. As for me, I'm doing some work for <a href="http://everest.com/">Everest</a> -- they're really awesome people that need their backend scaled right into infinity, and I think I'm the guy to do it for them. In fact, if you download the <a href="https://itunes.apple.com/us/app/everest-live-your-dreams-achieve/id581016826?mt=8">super cool free app</a> or have downloaded it at launch, you've already touched some of my code! The best part about onboarding quickly is having code live in production almost immediately.</p>

<p>So keep on watching this spot for more of the same that you've come to expect -- adrenaline-filled posts on the exciting world of server scalability and optimization.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How Not to Apply for a Job]]></title>
    <link href="http://joshsymonds.com/blog/2012/06/20/how-not-to-apply-for-a-job/"/>
    <updated>2012-06-20T22:29:00-05:00</updated>
    <id>http://joshsymonds.com/blog/2012/06/20/how-not-to-apply-for-a-job</id>
    <content type="html"><![CDATA[<p>I've been looking about two weeks now for a really fantastic designer for GirlsGuideTo -- a designer that's as fabulous as the site itself. Somewhat surprisingly, given how many people are unemployed or underemployed, my search has been really difficult. And not because of a dearth of responses: in fact, quite the opposite. I estimate I've received more than a hundred resumes in response to Craigslist postings, LinkedIn listings, and advertising in Dribbbble. And most surprising to me is the fact that the vast majority of these responses just aren't very good.</p>

<p>I'm sure that many of these resumes and coverletters come from experienced, seasoned professionals with a genuine and burning desire to be paid -- a desire that is equally matched by my hunger to pay them for the amazing work they can do. But frankly, you wouldn't know it from reading their letters. 99.9% of them are just... <em>bad</em>. So, I've taken the time to distill the mountain of resumes in my inbox into three succinct lessons. If you're going to apply for a job, please take them to heart before writing your potential employer. Not only will you increase the chances you'll actually be hired, but they will definitely thank you for breaking the tide of mediocrity that is surely washing over them. If you're the one to stand out, believe me... you'll get noticed.</p>

<!-- more -->


<h2>Don't Copy and Paste</h2>

<p>Easily the most common mistake I see -- the one that is most likely to make me entirely skip a candidate -- is that the cover letter is copied and pasted. It either doesn't include my company name (GirlsGuideTo is somewhat distinctive), or even more embarrassing, is addressed to a different company's name. I can always tell when I'm reading a copy/pasted letter. It's generic and boring; it enumerates talents and skills that I have no need for and didn't include in my job listing.</p>

<p>I took the time to hand-craft the job posting you read. I know you're probably applying to lots of jobs, and I sympathize that being without work -- or trying to find a new job -- is arduous and unpleasant. But if you want to be seriously considered, you must include three things in your cover letter:</p>

<ol>
<li>The name of the company you're applying to,</li>
<li>The position in the company you're applying for,</li>
<li>Why your skills make you a perfect fit for that position.</li>
</ol>


<p>The third one is obviously the most complicated but also the most necessary. The degree to which you customize your cover letter for the target job will be directly proportional to the number of people that respond positively to it. Believe me, I can tell which people actually wrote even a few choice words actually responding to my listing.</p>

<p>They are the ones that I will write back.</p>

<h2>Don't Make Me Find You</h2>

<p>If you're an Internet professional -- web designer, programmer, usability expert, whatever -- you must have an online presence. It can be as simple as your LinkedIn profile, but ideally should be a portfolio, with your own personalized URL, summarizing the work you've done, hopefully with lots of links and (even better) pictures. You should link to this summary of you in your cover letter. Be proud of it; include it in the first or second sentence. Say something like, "You can find my resume, and my portfolio, online at http://myattractivenamehere.com. But the parts that are most directly pertinent to you are..." And then go on to list the jobs that you've done that make you perfect for me!</p>

<p>Don't include a list of twenty links in your coverletter, saying they're you're work. If I'm feeling gracious I might click on the first two. Chances are they won't be what I'm looking for, and then I'll consign your resume to the dustbin of defeat. (This outcome might have been averted if you had twenty thumbnails I could quickly glance over on your portfolio, though.)</p>

<p>And for Heaven's sake include some kind of link to yourself! Anything at all works. If you're really an Internet professional and not just some high school student -- or even if you ARE a high school student -- you should have an online presence somewhere. If you don't include links in your resume or your cover letter, the chances of me Googling you to find them are absolutely zero. As are the chances of you landing this job.</p>

<h2>Don't Make Me Read Your Resume</h2>

<p>This is a harsh truth, but one I've heard again and again from people who have to make hiring decisions:</p>

<p>We don't read resumes unless we've already decided we're interested in a candidate.</p>

<p>Your cover letter is going to be your one and only chance to sell yourself. Go all out. If you have skills that you feel are directly applicable to the position, mention them in the cover letter, and then explain why those skills make you suited for the work. Your previous experiences that give you unique and valuable insight into the job should be front and center, in the letter itself.</p>

<p>And most likely, the second place I go, after reading your cover letter, won't be your resume either. It'll be your online presence, either your portfolio or sample sites you've linked me to. I'll only open your resume after I've already decided you're most likely a good fit -- and to be honest, I probably won't read it very closely anyway, since by that point I've already made a decision.</p>

<p>I know this seems unfair. You might be perfect for me; your resume even lists your numerous and varied accomplishments that make you my ideal match. But your competitor, with a very similar set of experiences, actually told me her accomplishments in her first paragraph. She drew my attention right to them -- I didn't even have to look in her resume to start being impressed by her. When I open her portfolio, I'll see that she's right. She <em>is</em> perfect for me. And then she goes on the shortlist, and you and your perfect resume are skipped over, unopened.</p>

<p>What I'm really trying to say with this small list of "don'ts" is very simply this: don't get lost in the crowd. I don't care if the designer we end up choosing is a guy or girl, Chicagoan or San Franciscoan, experienced or freshly graduated. (Also it's illegal for me to care, but that's beside the point.) All that really matters to me is that they're good; and more than being good, they're not afraid to say, "I'm perfect for you, and here's why."</p>

<p>And, honestly, that's all that matters to any prospective employer from their applicants. If you really want to be hired, then you'll have to show that you respect the time and energy they've invested in conducting a search for someone like you. Write plainly and to impress -- cram your cover letter with customized material, responding directly to the job posting. Include links early and often to your online presence. And fill your letter with proof after repeated proof that you are the ideal match they've been searching for.</p>

<p>Do all that, and you'll get a response to each and every one of your applications. And, hopefully, most of those responses will be positive.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Moving On]]></title>
    <link href="http://joshsymonds.com/blog/2012/05/31/moving-on/"/>
    <updated>2012-05-31T16:49:00-05:00</updated>
    <id>http://joshsymonds.com/blog/2012/05/31/moving-on</id>
    <content type="html"><![CDATA[<p>I try to keep to a schedule of a post every three days, and I've definitely not been keeping on top of that -- I haven't posted for almost a week and a half now. I apologize for the lack of content; in my defense, I've been deep in negotiations that have resulted in some exciting personal changes. Changes that should hopefully make this modest blog even more interesting!</p>

<!-- more -->


<h2>Leaving Hipstamatic</h2>

<p>I'm leaving my position as web director of Synthetic. I love the company and the product -- I think Hipstamatic has a bright future ahead of it, and it is, in my opinion, easily the best photography app on the market. But my professional growth there had stalled. I was having lots of fun juggling servers, code, customer service, database administration, and, well, everything else technical. Yet I was hungry for more: specifically, opportunities to execute and pursue my own technical vision as a valued partner, not just a valued employee. I wanted to be a decision maker.</p>

<p>Synthetic has always been a company driven by design. You can see it in any of their <a href="http://makebeautiful.hipstamatic.com/">amazing</a> <a href="http://gear.hipstamatic.com">sites</a> (featuring stellar HTML, CSS, and JS by the incomparable <a href="http://lukesbeard.com/">@LukesBeard</a>), and even the design of the Hipstamatic itself, which is retro and cool and usable all at once. But for an ambitious technical guy, direction through design didn't leave a lot of opportunity for personal growth. I knew if I wanted to let my voice be heard, I'd have to go somewhere else to do it.</p>

<h2>Joining GirlsGuideTo</h2>

<p>So what's next for Josh Symonds?</p>

<p>I accepted an offer from <a href="http://girlsguideto.com">GirlsGuideTo</a>, an insanely fabulous website for women, to be their CTO and co-founder. Having recently secured a round of seed financing, GirlsGuideTo is positioned really excellently. They have a huge userbase and are poised to really take over their market; their only stumbling block is some really old software and a somewhat dated design. Those are problems I can fix! Within the next month, I intend to give the site a complete graphical and technical overhaul. Under my technical direction (and CEO Brette Borow's product management), GirlsGuideTo will grow to be an even more amazing site -- the premiere destination for women to get advice, read awesome articles, and connect with one another.</p>

<p>Within the next couple weeks, I also intend to release my first RubyMotion application to the iTunes App Store. Featuring some excellent designs by the aforementioned <a href="http://lukesbeard.com/">@LukesBeard</a> and some pretty nifty code by yours truly, it represents the culmination of nearly a month spent working during almost all my free time. I think it's pretty cool, and I'll be spending some time discussing its technical infrastructure and how I used RubyMotion to make it happen.</p>

<p>Finally, what does all this mean for my blog? Well, I'll still post awesome code and go on and on about how much I love Ruby. But I'll also be talking about the trials and tribulations of a newly-minted CTO at a new startup; finding talent, putting it to use, and in general conquering the world one step at a time. And I promise to get back on my regular, three-day schedule while I do it.</p>

<p>So stick around and keep reading; this blog will only get more interesting!</p>
]]></content>
  </entry>
  
</feed>
