<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: redis | Josh Symonds]]></title>
  <link href="http://Veraticus.github.com/blog/categories/redis/atom.xml" rel="self"/>
  <link href="http://Veraticus.github.com/"/>
  <updated>2012-03-02T13:27:38-06:00</updated>
  <id>http://Veraticus.github.com/</id>
  <author>
    <name><![CDATA[Josh Symonds]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rapnd: Redis APN Daemon]]></title>
    <link href="http://Veraticus.github.com/blog/2012/02/21/rapnd-redis-apn-daemon/"/>
    <updated>2012-02-21T13:21:00-06:00</updated>
    <id>http://Veraticus.github.com/blog/2012/02/21/rapnd-redis-apn-daemon</id>
    <content type="html"><![CDATA[<p><a href="http://github.com/Veraticus/rapnd">rapnd</a> is a gem I developed to create a persistent connection through which to pass messages to Apple's Push Notification servers. It's pretty neat and you should check it out.</p>

<h2>Why another push notification gem?</h2>

<p>The existing ones just didn't do what I wanted. There were some that created persistent daemon connections... but they were only usable with one app, and we have two apps we want to send push notifications for. There were some with multiple app support, but they didn't have daemons or they assumed the existence of ActiveRecord. And in my opinion using ActiveRecord to store notifications is pretty dumb.</p>

<h2>Whoa! ActiveRecord is just fine, bro.</h2>

<p>Yeah, I love ActiveRecord. But it's clearly the wrong storage solution for push notifications. For every single push notification we send, we couldn't care less about the content or whether or not it was actually delivered -- so storing them in the database just built a huge table that we ended up not needing at all. Redis is the perfect solution: it can handle arbitrarily-sized lists, but doesn't bother with any significant kind of persistence. Also, blpop made the programming a breeze.</p>

<h2>Why a daemon?</h2>

<p>Well, Apple tells you to do it. But for a more important reason, Apple claims that constantly established and dropped connections to their servers will result in IP blacklisting. I've never actually seen this in practice, but... well... why chance it? rapnd uses one connection per daemon and tries to keep it open as long as possible.</p>

<p>So yeah, it's pretty cool. Go check out <a href="http://github.com/Veraticus/rapnd">the rapnd github page</a> to see the deets.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fixing Redis Timeout and Unexpected Token Errors]]></title>
    <link href="http://Veraticus.github.com/blog/2012/02/21/fixing-redis-timeout-and-unexpected-token-errors/"/>
    <updated>2012-02-21T12:41:00-06:00</updated>
    <id>http://Veraticus.github.com/blog/2012/02/21/fixing-redis-timeout-and-unexpected-token-errors</id>
    <content type="html"><![CDATA[<p>Ran into some annoying problems with redis and resque recently that couldn't be immediately solved through judicious Googling, so figured I'd make a quick post about it.</p>

<h2>Resource temporarily unavailable - Timeout reading from the socket</h2>

<p>If you installed redis-rb and hiredis by following the <a href="https://github.com/ezmobius/redis-rb">instructions at the redis-rb github page</a> then you might start running into this problem. Essentially, the version of hiredis they specify (and that you probably installed) is out of date -- 0.3.1 has a known bug with socket disconnects when reading from redis. So happily, the solution to this is pretty simple: just upgrade your version of hiredis. We use 0.4.4 now.</p>

<h2>unexpected token at 'OK' (Resque::Helpers::DecodeException)</h2>

<p>This one took a bit more tracking down to fix.</p>

<p>The newest versions of resque (I'm using 1.20.0) rely on versions greater than 2.4 of redis. Versions below that respond differently to certainly redis commands -- for example, returning "OK." Upgrading your redis server handily fixes this problem.</p>
]]></content>
  </entry>
  
</feed>
